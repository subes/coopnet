<?xml version="1.0" encoding="UTF-8"?>
<project name="CoopnetClient" default="package" basedir=".">
    <description>Used for making releases of JXGrabKey.</description>

    <tstamp>
        <format property="TODAY_DE" pattern="dd.MM.yyyy" locale="de,DE"/>
    </tstamp>
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="lib/ant-contrib-0.6.jar"/>
        </classpath>
    </taskdef>


    <!-- Load properties. First user specific properties which will override common properties. -->
    <property file="${user.name}.properties"/> 
    <property file="common.properties"/>

    <target name="-init">
        <mkdir dir="${client.release.dir}"/>
        <mkdir dir="${client.release.dir.lib}"/>
        <mkdir dir="${client.release.dir.data}"/>
    </target>

    <target name="-clean">
        <ant dir="${nbproject.client.dir}" target="clean"/>
        <ant dir="${nbproject.updater.dir}" target="clean"/>
        <delete dir="${client.release.dir}"/>
        <delete file="${nbproject.client.manifest}"/>
        <touch file="${nbproject.client.manifest}"/>
        <delete file="${nbproject.updater.manifest}"/>
        <touch file="${nbproject.updater.manifest}"/>
        <delete file="${packagingscripts.windows.name}"/>
        <delete dir="${release.dir}"/>
    </target>

    <target name="-build">
        <!-- create the manifest file for client -->
        <manifest file="${nbproject.client.manifest}">
            <attribute name="SplashScreen-Image" value="splash.png"/>
            <attribute name="Built-By" value="${user.name} (${TODAY_DE})"/>
            <attribute name="Specification-Title" value="Coopnet"/>
            <attribute name="Specification-Version" value="${client.compatibility.version}"/>
            <attribute name="Specification-Vendor" value="http://coopnet.sourceforge.net"/>
            <attribute name="Implementation-Title" value="CoopnetClient"/>
            <attribute name="Implementation-Version" value="${client.release.version}"/>
            <attribute name="Implementation-Vendor" value="http://coopnet.sourceforge.net"/>
        </manifest>
        <!-- build client project -->
        <ant dir="${nbproject.client.dir}" target="jar">
            <property name="manifest.file" value="manifest.mf"/>
            <property name="main.class" value="Main"/>
        </ant>
        <!-- create the manifest file for updater -->
        <manifest file="${nbproject.updater.manifest}">
            <attribute name="Built-By" value="${user.name} (${TODAY_DE})"/>
            <attribute name="Implementation-Title" value="CoopnetUpdater"/>
            <attribute name="Implementation-Version" value="${updater.release.version}"/>
            <attribute name="Implementation-Vendor" value="http://coopnet.sourceforge.net"/>
        </manifest>
        <!-- build updater project -->
        <ant dir="${nbproject.updater.dir}" target="jar">
            <property name="manifest.file" value="manifest.mf"/>
            <property name="main.class" value="Main"/>
        </ant>
    </target>

    <target name="-copy" depends="-init">
        <!-- copy client jar -->
        <copy todir="${client.release.dir}">
            <fileset dir="${nbproject.client.dir.dist}">
                <include name="**/*.jar"/>
            </fileset>
        </copy>
        <!-- copy clients libs -->
        <copy todir="${client.release.dir.lib}">
            <fileset dir="${nbproject.client.dir.lib}"/>
        </copy>
        <!-- copy clients data -->
        <copy todir="${client.release.dir.data}">
            <fileset dir="${nbproject.client.dir.data}">
                <exclude name="**/.svn"/>
            </fileset>
        </copy>
        <!-- copy clients releasefiles -->
        <copy todir="${client.release.dir}">
            <fileset dir="${releasefiles.dir}">
                <exclude name="**/.svn"/>
            </fileset>
        </copy>
        <!-- copy updater jar -->
        <copy todir="${basedir}">
            <fileset dir="${nbproject.updater.dir.dist}">
                <include name="**/*.jar"/>
            </fileset>
        </copy>
        <move file="${updater.jar}" tofile="${updater.release.jar}"/>
    </target>

    <target name="-zip">
        <copydir src="${client.release.dir}" dest="${zip.dir}/${client.release.dir}"/>
        <zip destfile="${client.release.zip}" basedir="${zip.dir}"/>
        <delete dir="${zip.dir}"/>
    </target>

    <target name="-nsi">
        <copyfile src="${packagingscripts.windows}" dest="${packagingscripts.windows.name}"/>
        <replaceregexp byline="true">
            <regexp pattern="\Q${VERSION}"/>
            <substitution expression="${client.release.version}"/>
            <fileset file="${packagingscripts.windows.name}"/>
        </replaceregexp>
        <replaceregexp byline="true">
            <regexp pattern="\Q${OUTPUT_FILE}"/>
            <substitution expression="${client.release.installer}"/>
            <fileset file="${packagingscripts.windows.name}"/>
        </replaceregexp>
        <exec executable="${commands.makensis}">
            <arg value="${packagingscripts.windows.name}"/>
        </exec>
    </target>

    <target name="package" description="Creates the release package.">
        <delete file="${updater.release.jar}"/>
        <delete file="${client.release.zip}"/>
        <delete file="${client.release.installer}"/>
        <antcall target="-clean"/>
        <antcall target="-build"/>
        <antcall target="-copy"/>
        <antcall target="-zip"/>
        <antcall target="-nsi"/>
        <antcall target="-clean"/>
    </target>

    <target name="release" description="Releases the packages to Sourceforge.">
        <!-- check if jsch is in classpath already -->
        <if>
            <not><available file="${user.home}/.ant/lib/jsch-0.1.42.jar" /></not>
            <then>
                <copy file="lib/jsch-0.1.42.jar" todir="${user.home}/.ant/lib"/>
                <fail>Classpath needed modification for scp target to work, please restart the build.</fail>
            </then>
        </if>

        <!-- ask user if he really wants to release -->
        <input
            message="Are you sure you want to release CoopnetClient-${client.release.version} and CoopnetUpdater-${updater.release.version} packages to sourceforge for project ${release.remote.project}?"
            validargs="y,n"
            addproperty="do.release"
        />
        <if>
            <equals arg1="n" arg2="${do.release}"/>
            <then>
                <fail>Build aborted by user.</fail>
            </then>
        </if>

        <input message="Please enter Sourceforge username:" addproperty="scp.user"/>
        <input message="Please enter Sourceforge password:" addproperty="scp.pass"/>

        <!-- prepare local dir -->
        <antcall target="package"/>
        <mkdir dir="${release.client.dir}/${client.release.version}" />
        <mkdir dir="${release.updater.dir}/${updater.release.version}" />
        <copy file="${client.release.zip}" todir="${release.client.dir}/${client.release.version}"/>
        <copy file="${client.release.installer}" todir="${release.client.dir}/${client.release.version}"/>
        <copy file="${updater.release.jar}" todir="${release.updater.dir}/${updater.release.version}"/>

        <!-- copy to frs -->
        <scp trust="true" failonerror="false" todir="${scp.user},${release.remote.project}:${scp.pass}@${release.remote.host}:${release.remote.dir}">
            <fileset dir="${release.dir}"/>
        </scp>

        <antcall target="-clean"/>

        <!-- update onlineclientdata -->
        <echo append="false" file="../OnlineClientData/LatestClientVersion.txt" message="${client.release.version}"/>
        <echo append="false" file="../OnlineClientData/LatestClient.txt" message="${release.client.download.link}"/>
        <echo append="false" file="../OnlineClientData/LatestUpdater.txt" message="${release.updater.download.link}"/>
        <copy overwrite="true" file="${nbproject.client.dir}/data/gamedata.xml" todir="../OnlineClientData/"/>
        <echo message="" />
        <echo message="" />
        <echo message="" />
        <echo message="" />
        <echo message="" />
        <echo message="../OnlineClientData has been updated, please commit the changes to make them available to clients." />
    </target>

</project>
